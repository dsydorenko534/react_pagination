{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","handlePrev","useCallback","handleNext","className","cn","disabled","href","onClick","map","pageNumber","active","items","App","useState","setCurrentPage","itemsPerPage","setItemsPerPage","startItem","endItem","visibleItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCKIG,EAA8B,SAAC,GAErC,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,QAASC,EACZ,EADYA,YAAaC,EACzB,EADyBA,aAEvBC,EAAaC,KAAKC,KAAKN,EAAQC,GAE/BM,EAAaC,uBAAY,WAC7B,OAAuB,IAAhBN,GACFC,EAAcD,EAAc,KAChC,CAACA,IAEEO,EAAaD,uBAAY,WAC7B,OAAON,IAAgBE,GAClBD,EAAcD,EAAc,KAChC,CAACA,IAEJ,OACE,qBAAIQ,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBV,IAA3C,SACE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EACfY,QAASP,EALX,oBAWDd,EAAW,EAAGW,GAAYW,KAAI,SAAAC,GAAU,OACvC,oBACEN,UAAWC,IAAG,YAAa,CAAEM,OAAQD,IAAed,IADtD,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,KAREA,MAaT,oBACEN,UAAWC,IAAG,YAAa,CAAEC,SAAUV,IAAgBE,IADzD,SAGE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBE,EAC/BU,QAASL,EALX,wBCrDFS,EAAQzB,EAAW,EAFN,IAEqBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAE5CsB,EAAU,WACrB,MAAsCC,mBAAS,GAA/C,mBAAOlB,EAAP,KAAoBmB,EAApB,KACA,EAAwCD,mBALd,GAK1B,mBAAOE,EAAP,KAAqBC,EAArB,KAEMC,GAAatB,EAAc,GAAKoB,EAChCG,EAAUvB,EAAcoB,EATb,GAUbpB,EAAcoB,EAVD,GAYXI,EAAeR,EAAMS,MAAMH,EAAWC,GAO5C,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCsB,EAAY,EAD7C,cACoDC,EADpD,eAvBa,GAuBb,OAIA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRkB,GAAG,kBACHlB,UAAU,eACVmB,MAAOP,EACPQ,SApBW,SAACC,GACpBV,EAAe,GACfE,GAAiBQ,EAAMC,OAAOH,QAaxB,UAOE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAGJ,uBAAOI,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAhDW,GAiDXC,QAASqB,EACTpB,YAAaA,EACbC,aAAckB,IAGhB,6BACGK,EAAaX,KAAI,SAAAmB,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC1DnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1870de79.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React, { useCallback } from 'react';\nimport cn from 'classnames';\n\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total, perPage, currentPage, onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n\n  const handlePrev = useCallback(() => {\n    return currentPage !== 1\n      && onPageChange((currentPage - 1));\n  }, [currentPage]);\n\n  const handleNext = useCallback(() => {\n    return currentPage !== totalPages\n      && onPageChange((currentPage + 1));\n  }, [currentPage]);\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: currentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handlePrev}\n        >\n          «\n        </a>\n      </li>\n\n      {getNumbers(1, totalPages).map(pageNumber => (\n        <li\n          className={cn('page-item', { active: pageNumber === currentPage })}\n          key={pageNumber}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageNumber}`}\n            onClick={() => onPageChange(pageNumber)}\n          >\n            {pageNumber}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn('page-item', { disabled: currentPage === totalPages })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages}\n          onClick={handleNext}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import { ChangeEvent, FC, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst itemsTotal = 42;\nconst itemsPerPageDefault = 5;\nconst items = getNumbers(1, itemsTotal).map(n => `Item ${n}`);\n\nexport const App: FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(itemsPerPageDefault);\n\n  const startItem = (currentPage - 1) * itemsPerPage;\n  const endItem = currentPage * itemsPerPage < itemsTotal\n    ? currentPage * itemsPerPage\n    : itemsTotal;\n  const visibleItems = items.slice(startItem, endItem);\n\n  const handleChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setCurrentPage(1);\n    setItemsPerPage(+event.target.value);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItem + 1} - ${endItem} of ${itemsTotal})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={itemsTotal}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}